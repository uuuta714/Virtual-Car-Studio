{"mappings":"C,A,S,C,C,C,C,C,C,C,C,C,E,I,E,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,E,E,A,Y,O,C,C,E,E,C,C,E,C,E,E,K,E,C,E,E,A,a,O,Q,A,Y,O,O,O,E,O,O,C,I,C,Q,S,E,C,C,C,E,G,C,C,C,E,C,C,G,C,C,C,E,C,C,I,E,A,Y,O,C,C,E,E,C,C,E,C,G,C,G,E,O,E,E,C,G,G,E,O,E,E,C,G,G,G,A,U,O,E,O,E,G,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,O,C,S,C,E,I,E,C,C,E,C,E,C,E,C,O,A,M,E,E,C,E,E,K,C,C,E,I,E,C,C,E,C,I,E,M,C,G,C,C,E,C,E,C,I,C,E,O,C,E,E,E,O,C,I,C,C,O,C,C,E,C,O,C,S,E,C,E,I,E,E,O,C,G,M,A,C,I,E,C,E,E,E,C,C,E,e,C,C,E,E,M,C,S,C,E,I,C,E,C,E,I,C,M,C,E,I,C,O,C,C,C,E,E,O,C,E,E,K,C,E,E,M,C,E,E,Q,C,S,C,C,C,E,C,C,E,C,C,S,C,C,C,E,E,O,C,C,E,C,E,A,E,O,c,C,E,O,C,I,W,O,C,C,E,A,C,G,C,C,E,C,E,I,I,E,E,E,E,M,C,I,E,C,C,E,E,G,E,C,I,E,E,E,A,C,U,O,S,A,a,O,O,O,O,C,E,Y,O,Q,O,G,E,O,W,O,C,E,C,E,C,M,C,S,C,C,C,C,C,MCaI,EAQA,EAyEA,EA9FJ,IAAA,EAAA,EAAA,SAEA,EAAA,EAAA,gDACA,EAAA,4CACA,IAAA,EAAA,EAAA,4CACA,EAAA,EAAA,gBAmBA,SAAS,EAAmB,CAAI,EAC5B,GAAI,CAAA,EAAA,EAAA,UAAS,AAAT,IAAa,IAAI,CAAC,EAAM,AAAC,IACzB,EAAO,OAAO,CAAG,EAAM,gCAAgC,CACvD,EAAS,EAEL,GACA,AAAA,CAAA,EAAA,EAAA,KAAK,AAAL,EAAM,MAAM,CAAC,GAIjB,AADA,CAAA,EAAS,IAAI,EAAA,cAAc,CAAC,EAjBxB,GACA,IAgB4D,EACzD,QAAQ,CAAC,CAAC,CAAG,MACpB,AAAA,CAAA,EAAA,EAAA,KAAI,AAAJ,EAAM,GAAG,CAAC,GAEV,AAAA,EAAA,KAAI,CAAE,WAAW,CA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","sources":["<anon>","src/js/env.js"],"sourcesContent":["// modules are defined as an array\n// [ module function, map of requires ]\n//\n// map of requires is short require name -> numeric require\n//\n// anything defined in a previous bundle is accessed via the\n// orig method which is the require for previous bundles\n\n(function (modules, entry, mainEntry, parcelRequireName, globalName) {\n  /* eslint-disable no-undef */\n  var globalObject =\n    typeof globalThis !== 'undefined'\n      ? globalThis\n      : typeof self !== 'undefined'\n      ? self\n      : typeof window !== 'undefined'\n      ? window\n      : typeof global !== 'undefined'\n      ? global\n      : {};\n  /* eslint-enable no-undef */\n\n  // Save the require from previous bundle to this closure if any\n  var previousRequire =\n    typeof globalObject[parcelRequireName] === 'function' &&\n    globalObject[parcelRequireName];\n\n  var cache = previousRequire.cache || {};\n  // Do not use `require` to prevent Webpack from trying to bundle this call\n  var nodeRequire =\n    typeof module !== 'undefined' &&\n    typeof module.require === 'function' &&\n    module.require.bind(module);\n\n  function newRequire(name, jumped) {\n    if (!cache[name]) {\n      if (!modules[name]) {\n        // if we cannot find the module within our internal map or\n        // cache jump to the current global require ie. the last bundle\n        // that was added to the page.\n        var currentRequire =\n          typeof globalObject[parcelRequireName] === 'function' &&\n          globalObject[parcelRequireName];\n        if (!jumped && currentRequire) {\n          return currentRequire(name, true);\n        }\n\n        // If there are other bundles on this page the require from the\n        // previous one is saved to 'previousRequire'. Repeat this as\n        // many times as there are bundles until the module is found or\n        // we exhaust the require chain.\n        if (previousRequire) {\n          return previousRequire(name, true);\n        }\n\n        // Try the node require function if it exists.\n        if (nodeRequire && typeof name === 'string') {\n          return nodeRequire(name);\n        }\n\n        var err = new Error(\"Cannot find module '\" + name + \"'\");\n        err.code = 'MODULE_NOT_FOUND';\n        throw err;\n      }\n\n      localRequire.resolve = resolve;\n      localRequire.cache = {};\n\n      var module = (cache[name] = new newRequire.Module(name));\n\n      modules[name][0].call(\n        module.exports,\n        localRequire,\n        module,\n        module.exports,\n        this\n      );\n    }\n\n    return cache[name].exports;\n\n    function localRequire(x) {\n      var res = localRequire.resolve(x);\n      return res === false ? {} : newRequire(res);\n    }\n\n    function resolve(x) {\n      var id = modules[name][1][x];\n      return id != null ? id : x;\n    }\n  }\n\n  function Module(moduleName) {\n    this.id = moduleName;\n    this.bundle = newRequire;\n    this.exports = {};\n  }\n\n  newRequire.isParcelRequire = true;\n  newRequire.Module = Module;\n  newRequire.modules = modules;\n  newRequire.cache = cache;\n  newRequire.parent = previousRequire;\n  newRequire.register = function (id, exports) {\n    modules[id] = [\n      function (require, module) {\n        module.exports = exports;\n      },\n      {},\n    ];\n  };\n\n  Object.defineProperty(newRequire, 'root', {\n    get: function () {\n      return globalObject[parcelRequireName];\n    },\n  });\n\n  globalObject[parcelRequireName] = newRequire;\n\n  for (var i = 0; i < entry.length; i++) {\n    newRequire(entry[i]);\n  }\n\n  if (mainEntry) {\n    // Expose entry point to Node, AMD or browser globals\n    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js\n    var mainExports = newRequire(mainEntry);\n\n    // CommonJS\n    if (typeof exports === 'object' && typeof module !== 'undefined') {\n      module.exports = mainExports;\n\n      // RequireJS\n    } else if (typeof define === 'function' && define.amd) {\n      define(function () {\n        return mainExports;\n      });\n\n      // <script>\n    } else if (globalName) {\n      this[globalName] = mainExports;\n    }\n  }\n})({\"jhgT1\":[function(require,module,exports) {\nvar _three = require(\"three\");\nvar _groundedSkyboxJs = require(\"three/examples/jsm/objects/GroundedSkybox.js\");\nvar _gltfloaderJs = require(\"three/examples/jsm/loaders/GLTFLoader.js\");\nvar _rgbeloaderJs = require(\"three/examples/jsm/loaders/RGBELoader.js\");\nvar _scriptsJs = require(\"./scripts.js\");\n// environment set up\nlet envMap;\nconst params = {\n    height: 15,\n    radius: 100,\n    enabled: true\n};\nlet skybox;\n// load snow/beach env \nfunction loadEnvironmentMap(path) {\n    new (0, _rgbeloaderJs.RGBELoader)().load(path, (hdrMap)=>{\n        hdrMap.mapping = _three.EquirectangularReflectionMapping;\n        envMap = hdrMap;\n        if (skybox) (0, _scriptsJs.scene).remove(skybox);\n        skybox = new (0, _groundedSkyboxJs.GroundedSkybox)(envMap, params.height, params.radius);\n        skybox.position.y = params.height - 0.01;\n        (0, _scriptsJs.scene).add(skybox);\n        (0, _scriptsJs.scene).environment = envMap;\n        (0, _scriptsJs.scene).background = null;\n    });\n    if (floor) {\n        (0, _scriptsJs.scene).remove(floor);\n        floor.geometry.dispose();\n        floor.material.dispose();\n        floor = null;\n    }\n}\nfunction loadStudiotMap() {\n    (0, _scriptsJs.scene).environment = null;\n    (0, _scriptsJs.scene).background = null;\n    const SCENE_COLOR = 0x000000;\n    (0, _scriptsJs.scene).background = new _three.Color(SCENE_COLOR);\n    if (skybox) (0, _scriptsJs.scene).remove(skybox);\n    new (0, _rgbeloaderJs.RGBELoader)().load(\"./assets/studio/studio_small_08_1k.hdr\", (hdrMap)=>{\n        hdrMap.mapping = _three.EquirectangularReflectionMapping;\n        envMap = hdrMap;\n        (0, _scriptsJs.scene).background = new _three.Color(0x000000);\n        (0, _scriptsJs.scene).environment = envMap;\n    });\n}\n// default to be studio env\nloadStudiotMap();\ndocument.getElementById(\"snow\").addEventListener(\"click\", ()=>{\n    loadEnvironmentMap(\"./assets/snow/birchwood_1k.hdr\");\n    document.getElementById(\"studio\").classList.remove(\"show\");\n});\ndocument.getElementById(\"beach\").addEventListener(\"click\", ()=>{\n    loadEnvironmentMap(\"./assets/sunrise/blouberg_sunrise_2_1k.hdr\");\n    document.getElementById(\"studio\").classList.remove(\"show\");\n});\ndocument.getElementById(\"studioButton\").addEventListener(\"click\", ()=>{\n    loadStudiotMap();\n    document.getElementById(\"studio\").classList.add(\"show\");\n});\ndocument.getElementById(\"defaultLight\").addEventListener(\"click\", function() {\n    loadStudiotMap();\n});\ndocument.getElementById(\"customLight\").addEventListener(\"click\", function() {\n    (0, _scriptsJs.scene).environment = null;\n    (0, _scriptsJs.scene).background = new _three.Color(0x000000);\n});\n// floor\nlet floor;\nfunction addAsphaltFloor() {\n    // Load the floor texture\n    const textureLoader = new _three.TextureLoader();\n    // Load the textures\n    const colorTexture = textureLoader.load(\"./assets/asphalt/Asphalt025C_2K-JPG_Color.jpg\");\n    const displacementTexture = textureLoader.load(\"./assets/asphalt/Asphalt025C_2K-JPG_Displacement.jpg\");\n    const normalTexture = textureLoader.load(\"./assets/asphalt/Asphalt025C_2K-JPG_NormalGL.jpg\");\n    const roughnessTexture = textureLoader.load(\"./assets/asphalt/Asphalt025C_2K-JPG_Roughness.jpg\");\n    const aoTexture = textureLoader.load(\"./assets/asphalt/Asphalt025C_2K-JPG_AmbientOcclusion.jpg\");\n    // Set texture parameters\n    colorTexture.wrapS = colorTexture.wrapT = _three.RepeatWrapping;\n    displacementTexture.wrapS = displacementTexture.wrapT = _three.RepeatWrapping;\n    normalTexture.wrapS = normalTexture.wrapT = _three.RepeatWrapping;\n    aoTexture.wrapS = aoTexture.wrapT = _three.RepeatWrapping;\n    // Create the floor plane\n    let floorGeometry = new _three.PlaneGeometry(20, 20);\n    let floorMaterial = new _three.MeshStandardMaterial({\n        map: colorTexture,\n        displacementMap: displacementTexture,\n        normalMap: normalTexture,\n        roughnessMap: roughnessTexture,\n        aoMap: aoTexture,\n        displacementScale: 0,\n        side: _three.DoubleSide\n    });\n    floor = new _three.Mesh(floorGeometry, floorMaterial);\n    floor.rotation.x = -Math.PI / 2; // Rotate to lay flat\n    floor.position.y = 0;\n    (0, _scriptsJs.scene).add(floor);\n}\nfunction addConcreteFloor() {\n    // Load the floor texture\n    const textureLoader = new _three.TextureLoader();\n    // Load the textures\n    const colorTexture = textureLoader.load(\"./assets/concrete/Concrete017_1K-PNG_Color.png\");\n    const displacementTexture = textureLoader.load(\"./assets/concrete/Concrete017_1K-PNG_Displacement.png\");\n    const normalTexture = textureLoader.load(\"./assets/concrete/Concrete017_1K-PNG_NormalGL.png\");\n    const roughnessTexture = textureLoader.load(\"./assets/concrete/Concrete017_1K-PNG_Roughness.png\");\n    // const aoTexture = textureLoader.load(\"./assets/asphalt/Asphalt025C_2K-JPG_AmbientOcclusion.jpg\");\n    // Set texture parameters\n    colorTexture.wrapS = colorTexture.wrapT = _three.RepeatWrapping;\n    displacementTexture.wrapS = displacementTexture.wrapT = _three.RepeatWrapping;\n    normalTexture.wrapS = normalTexture.wrapT = _three.RepeatWrapping;\n    // aoTexture.wrapS = aoTexture.wrapT = THREE.RepeatWrapping;\n    // Create the floor plane\n    let floorGeometry = new _three.PlaneGeometry(20, 20);\n    let floorMaterial = new _three.MeshStandardMaterial({\n        map: colorTexture,\n        displacementMap: displacementTexture,\n        normalMap: normalTexture,\n        roughnessMap: roughnessTexture,\n        //   aoMap: aoTexture,\n        displacementScale: 0,\n        side: _three.DoubleSide\n    });\n    floor = new _three.Mesh(floorGeometry, floorMaterial);\n    floor.rotation.x = -Math.PI / 2; // Rotate to lay flat\n    floor.position.y = 0;\n    (0, _scriptsJs.scene).add(floor);\n}\ndocument.getElementById(\"floorDropdown\").addEventListener(\"change\", function() {\n    var selectedOption = this.value;\n    if (selectedOption === \"asphalt\") addAsphaltFloor();\n    else if (selectedOption === \"concrete\") addConcreteFloor();\n});\n\n},{\"three\":\"35GVu\",\"three/examples/jsm/objects/GroundedSkybox.js\":\"llUyU\",\"three/examples/jsm/loaders/GLTFLoader.js\":\"d9kK2\",\"three/examples/jsm/loaders/RGBELoader.js\":\"1pJcd\",\"./scripts.js\":\"f5JPT\"}]},[\"jhgT1\"], \"jhgT1\", \"parcelRequire6fcf\")\n\n//# sourceMappingURL=index.24f97a4f.js.map\n","import * as THREE from 'three';\r\nimport { Vector3 } from 'three'\r\nimport { GroundedSkybox } from 'three/examples/jsm/objects/GroundedSkybox.js';\r\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\r\nimport { RGBELoader } from 'three/examples/jsm/loaders/RGBELoader.js';\r\nimport {\r\n    renderer,\r\n    camera, \r\n    scene,\r\n    objects,\r\n} from './scripts.js'\r\n\r\n// environment set up\r\nlet envMap;\r\n\r\nconst params = {\r\n    height: 15,\r\n    radius: 100,\r\n    enabled: true,\r\n};\r\n\r\nlet skybox;\r\n\r\n// load snow/beach env \r\nfunction loadEnvironmentMap(path) {\r\n    new RGBELoader().load(path, (hdrMap) => {\r\n        hdrMap.mapping = THREE.EquirectangularReflectionMapping;\r\n        envMap = hdrMap;\r\n\r\n        if (skybox) {\r\n            scene.remove(skybox);\r\n        }\r\n\r\n        skybox = new GroundedSkybox(envMap, params.height, params.radius);\r\n        skybox.position.y = params.height - 0.01;\r\n        scene.add(skybox);\r\n\r\n        scene.environment = envMap;\r\n        scene.background = null;\r\n    });\r\n\r\n    if (floor) {\r\n      scene.remove(floor);\r\n      floor.geometry.dispose();\r\n      floor.material.dispose();\r\n      floor = null;\r\n    }\r\n}\r\n\r\nfunction loadStudiotMap() {\r\n    scene.environment = null;\r\n    scene.background = null;\r\n    const SCENE_COLOR = 0x000000;\r\n    scene.background = new THREE.Color(SCENE_COLOR);\r\n    if (skybox) {\r\n        scene.remove(skybox);\r\n    }\r\n    new RGBELoader().load('./assets/studio/studio_small_08_1k.hdr', (hdrMap) => {\r\n        hdrMap.mapping = THREE.EquirectangularReflectionMapping;\r\n        envMap = hdrMap;\r\n        scene.background = new THREE.Color(0x000000);\r\n        scene.environment = envMap;\r\n    });\r\n}\r\n\r\n// default to be studio env\r\nloadStudiotMap();\r\n\r\n\r\ndocument.getElementById('snow').addEventListener('click', () => {\r\n    loadEnvironmentMap('./assets/snow/birchwood_1k.hdr');\r\n    document.getElementById('studio').classList.remove('show');\r\n});\r\n\r\ndocument.getElementById('beach').addEventListener('click', () => {\r\n    loadEnvironmentMap('./assets/sunrise/blouberg_sunrise_2_1k.hdr');\r\n    document.getElementById('studio').classList.remove('show');\r\n});\r\n\r\ndocument.getElementById('studioButton').addEventListener('click', () => {\r\n    loadStudiotMap();\r\n    document.getElementById('studio').classList.add('show');\r\n});\r\n\r\ndocument.getElementById(\"defaultLight\").addEventListener(\"click\", function() {\r\n    loadStudiotMap();\r\n  });\r\n\r\ndocument.getElementById(\"customLight\").addEventListener(\"click\", function() {\r\n    scene.environment = null;\r\n    scene.background = new THREE.Color(0x000000);\r\n  });\r\n\r\n// floor\r\nlet floor;\r\n\r\nfunction addAsphaltFloor() {\r\n    // Load the floor texture\r\n    const textureLoader = new THREE.TextureLoader();\r\n    // Load the textures\r\n    const colorTexture = textureLoader.load(\"./assets/asphalt/Asphalt025C_2K-JPG_Color.jpg\");\r\n    const displacementTexture = textureLoader.load(\"./assets/asphalt/Asphalt025C_2K-JPG_Displacement.jpg\");\r\n    const normalTexture = textureLoader.load(\"./assets/asphalt/Asphalt025C_2K-JPG_NormalGL.jpg\");\r\n    const roughnessTexture = textureLoader.load(\"./assets/asphalt/Asphalt025C_2K-JPG_Roughness.jpg\");\r\n    const aoTexture = textureLoader.load(\"./assets/asphalt/Asphalt025C_2K-JPG_AmbientOcclusion.jpg\");\r\n\r\n    // Set texture parameters\r\n    colorTexture.wrapS = colorTexture.wrapT = THREE.RepeatWrapping;\r\n    displacementTexture.wrapS = displacementTexture.wrapT = THREE.RepeatWrapping;\r\n    normalTexture.wrapS = normalTexture.wrapT = THREE.RepeatWrapping;\r\n    aoTexture.wrapS = aoTexture.wrapT = THREE.RepeatWrapping;\r\n\r\n    // Create the floor plane\r\n    let floorGeometry = new THREE.PlaneGeometry(20, 20);\r\n    let floorMaterial = new THREE.MeshStandardMaterial({ \r\n      map: colorTexture,\r\n      displacementMap: displacementTexture,\r\n      normalMap: normalTexture,\r\n      roughnessMap: roughnessTexture,\r\n      aoMap: aoTexture,\r\n      displacementScale: 0,\r\n      side: THREE.DoubleSide,\r\n    });\r\n\r\n    floor = new THREE.Mesh(floorGeometry, floorMaterial);\r\n    floor.rotation.x = -Math.PI / 2; // Rotate to lay flat\r\n    floor.position.y = 0;\r\n    scene.add(floor);\r\n  }\r\n\r\n  function addConcreteFloor() {\r\n    // Load the floor texture\r\n    const textureLoader = new THREE.TextureLoader();\r\n    // Load the textures\r\n    const colorTexture = textureLoader.load(\"./assets/concrete/Concrete017_1K-PNG_Color.png\");\r\n    const displacementTexture = textureLoader.load(\"./assets/concrete/Concrete017_1K-PNG_Displacement.png\");\r\n    const normalTexture = textureLoader.load(\"./assets/concrete/Concrete017_1K-PNG_NormalGL.png\");\r\n    const roughnessTexture = textureLoader.load(\"./assets/concrete/Concrete017_1K-PNG_Roughness.png\");\r\n    // const aoTexture = textureLoader.load(\"./assets/asphalt/Asphalt025C_2K-JPG_AmbientOcclusion.jpg\");\r\n\r\n    // Set texture parameters\r\n    colorTexture.wrapS = colorTexture.wrapT = THREE.RepeatWrapping;\r\n    displacementTexture.wrapS = displacementTexture.wrapT = THREE.RepeatWrapping;\r\n    normalTexture.wrapS = normalTexture.wrapT = THREE.RepeatWrapping;\r\n    // aoTexture.wrapS = aoTexture.wrapT = THREE.RepeatWrapping;\r\n\r\n    // Create the floor plane\r\n    let floorGeometry = new THREE.PlaneGeometry(20, 20);\r\n    let floorMaterial = new THREE.MeshStandardMaterial({ \r\n      map: colorTexture,\r\n      displacementMap: displacementTexture,\r\n      normalMap: normalTexture,\r\n      roughnessMap: roughnessTexture,\r\n    //   aoMap: aoTexture,\r\n      displacementScale: 0,\r\n      side: THREE.DoubleSide,\r\n    });\r\n\r\n    floor = new THREE.Mesh(floorGeometry, floorMaterial);\r\n    floor.rotation.x = -Math.PI / 2; // Rotate to lay flat\r\n    floor.position.y = 0;\r\n    scene.add(floor);\r\n  }\r\n\r\n  document.getElementById(\"floorDropdown\").addEventListener(\"change\", function() {\r\n    var selectedOption = this.value;\r\n    if (selectedOption === \"asphalt\") {\r\n      addAsphaltFloor();\r\n    } else if (selectedOption === \"concrete\") {\r\n        addConcreteFloor();\r\n    }\r\n  });"],"names":["modules","entry","mainEntry","parcelRequireName","globalName","globalObject","globalThis","self","window","global","previousRequire","cache","nodeRequire","module","require","bind","newRequire","name","jumped","currentRequire","err","Error","code","localRequire","resolve","x","id","Module","call","exports","res","isParcelRequire","moduleName","bundle","parent","register","Object","defineProperty","get","i","length","mainExports","define","amd","envMap","skybox","floor","_three","_groundedSkyboxJs","_rgbeloaderJs","_scriptsJs","loadEnvironmentMap","path","RGBELoader","load","hdrMap","mapping","EquirectangularReflectionMapping","scene","remove","GroundedSkybox","position","y","params","add","environment","background","geometry","dispose","material","loadStudiotMap","Color","document","getElementById","addEventListener","classList","selectedOption","value","addAsphaltFloor","textureLoader","TextureLoader","colorTexture","displacementTexture","normalTexture","roughnessTexture","aoTexture","wrapS","wrapT","RepeatWrapping","floorGeometry","PlaneGeometry","floorMaterial","MeshStandardMaterial","map","displacementMap","normalMap","roughnessMap","aoMap","displacementScale","side","DoubleSide","Mesh","rotation","Math","PI","addConcreteFloor"],"version":3,"file":"index.24f97a4f.js.map"}